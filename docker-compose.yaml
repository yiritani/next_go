networks:
  next_go:
    driver: bridge

services:
  frontend:
    networks:
      - next_go
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    ports:
      - 3000:3000
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    develop:
      watch:
        - action: sync
          path: ./apps/web
          target: ./app/apps/web
        - action: rebuild
          path: ./apps/web/package.json
        - action: rebuild
          path: ./packages/ui/package.json
    depends_on:
      - backend

  page_router:
    networks:
      - next_go
    build:
      context: .
      dockerfile: ./apps/page_router/Dockerfile
    ports:
      - 3001:3001
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    develop:
      watch:
        - action: sync
          path: ./apps/page_router
          target: ./app/apps/page_router
        - action: rebuild
          path: ./apps/page_router/package.json
    depends_on:
      - backend

  backend:
    networks:
      - next_go
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    ports:
      - 8080:8080
    develop:
      watch:
        - action: sync
          path: ./apps/backend
          target: ./app/apps/backend
    volumes:
      - ./apps/backend:/app
    depends_on:
      - db

  db:
    image: "postgres:16-alpine"
    networks:
      - next_go
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    volumes:
      - db-store:/var/lib/postgresql/data

volumes:
  db-store:

name: terraform

on:
  workflow_dispatch:
    inputs:
      plan_or_apply:
        description: 'Terraform plan or apply'
        required: true
        type: choice
        options:
          - plan
          - apply

jobs:
  terraform-workflow:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write # PR 作成に必要
      pull-requests: write

    strategy:
      matrix:
        tf_working_dir:
          - ./infra/terraform

    steps:
      - uses: actions/checkout@v4
        name: Checkout
        id: checkout

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/1063239685310/locations/global/workloadIdentityPools/gha-terraform-pool/providers/gha-terraform-provider'
          service_account: 'gha-terraform-sa@next-go-445113.iam.gserviceaccount.com'

      - uses: shmokmt/actions-setup-tfcmt@v2
        name: Setup tfcmt

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - uses: hashicorp/setup-terraform@v3
        name: Setup terraform

      - name: Terraform fmt
        id: fmt
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform fmt -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform init -upgrade

      - name: Terraform Validate
        id: validate
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event.inputs.plan_or_apply == 'plan'
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform plan -out=tfplan
        continue-on-error: true

      - name: Terraform Plan Status
        id: status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.event.inputs.plan_or_apply == 'apply'
        run: |
          cd ${{ matrix.tf_working_dir }}
          terraform apply -auto-approve -input=false
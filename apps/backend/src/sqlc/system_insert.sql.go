// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: system_insert.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertSystem = `-- name: InsertSystem :one
INSERT INTO "system" (system_name) VALUES ($1) RETURNING id, system_name, created_at
`

func (q *Queries) InsertSystem(ctx context.Context, systemName string) (System, error) {
	row := q.db.QueryRow(ctx, insertSystem, systemName)
	var i System
	err := row.Scan(&i.ID, &i.SystemName, &i.CreatedAt)
	return i, err
}

const insertSystemUserRelation = `-- name: InsertSystemUserRelation :one
INSERT INTO "system_user_relation" (system_id, user_id, system_role) VALUES ($1, $2, $3) RETURNING system_id, user_id, system_role, created_at
`

type InsertSystemUserRelationParams struct {
	SystemID   pgtype.UUID
	UserID     pgtype.UUID
	SystemRole SystemRole
}

func (q *Queries) InsertSystemUserRelation(ctx context.Context, arg InsertSystemUserRelationParams) (SystemUserRelation, error) {
	row := q.db.QueryRow(ctx, insertSystemUserRelation, arg.SystemID, arg.UserID, arg.SystemRole)
	var i SystemUserRelation
	err := row.Scan(
		&i.SystemID,
		&i.UserID,
		&i.SystemRole,
		&i.CreatedAt,
	)
	return i, err
}

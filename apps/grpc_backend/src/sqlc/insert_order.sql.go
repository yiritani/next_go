// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: insert_order.sql

package sqlc

import (
	"context"
)

const insertOrder = `-- name: InsertOrder :one
INSERT INTO orders (
    user_id, product_id, quantity, order_date
) VALUES (
                ?, ?, ?, ?
         )
    RETURNING order_id, user_id, product_id, quantity, order_date
`

type InsertOrderParams struct {
	UserID    int64
	ProductID int64
	Quantity  int64
	OrderDate string
}

type InsertOrderRow struct {
	OrderID   int64
	UserID    int64
	ProductID int64
	Quantity  int64
	OrderDate string
}

func (q *Queries) InsertOrder(ctx context.Context, arg InsertOrderParams) (InsertOrderRow, error) {
	row := q.db.QueryRowContext(ctx, insertOrder,
		arg.UserID,
		arg.ProductID,
		arg.Quantity,
		arg.OrderDate,
	)
	var i InsertOrderRow
	err := row.Scan(
		&i.OrderID,
		&i.UserID,
		&i.ProductID,
		&i.Quantity,
		&i.OrderDate,
	)
	return i, err
}

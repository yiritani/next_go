# --------------------------------------------
# Stage 1: Install dependencies
# --------------------------------------------
FROM node:22-alpine AS dependencies

# 環境変数の設定（必要に応じて）
ENV PNPM_VERSION=8.6.3

# 作業ディレクトリを設定
WORKDIR /app

# pnpm をグローバルにインストール
RUN npm install -g pnpm@${PNPM_VERSION}

# 依存関係のキャッシュを有効にするために package.json と pnpm-lock.yaml を先にコピー
COPY package.json pnpm-lock.yaml ./

# 依存関係をインストール（キャッシュレイヤーを活用）
RUN pnpm install

# --------------------------------------------
# Stage 2: Build the application
# --------------------------------------------
FROM dependencies AS builder

# ソースコードをコピー
COPY . .

# TypeScript の型チェックと Next.js のビルドを実行
RUN pnpm build

# --------------------------------------------
# Stage 3: Create a lightweight image for development
# --------------------------------------------
FROM node:22-alpine AS dev

# 作業ディレクトリを設定
WORKDIR /app

# pnpm をグローバルにインストール
ENV PNPM_VERSION=8.6.3
RUN npm install -g pnpm@${PNPM_VERSION}

# 依存関係をキャッシュするために package.json と pnpm-lock.yaml を先にコピー
COPY package.json pnpm-lock.yaml ./

# 依存関係をインストール
RUN pnpm install

# ソースコードをコピー

COPY src ./src
COPY public ./public
COPY next.config.ts .
COPY tsconfig.json .

# ポートを公開
EXPOSE 3000

# 環境変数の設定（必要に応じて）
ENV NODE_ENV=development

# 開発用サーバーを起動（ホットリロード有効）
CMD ["pnpm", "dev"]